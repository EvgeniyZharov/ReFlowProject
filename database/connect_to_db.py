from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String, Text, DECIMAL
from sqlalchemy.orm import sessionmaker
import os

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DB_CONFIG = {
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DATABASE_URL = f"postgresql://{DB_CONFIG['user']}:{DB_CONFIG['password']}@{DB_CONFIG['host']}:{DB_CONFIG['port']}/{DB_CONFIG['dbname']}"

# –°–æ–∑–¥–∞–Ω–∏–µ engine
engine = create_engine(DATABASE_URL, echo=True)  # echo=True –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ SQL –∑–∞–ø—Ä–æ—Å–æ–≤

# –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
metadata = MetaData()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
api_keys = Table(
    'api_keys', metadata,
    Column('id', Integer, primary_key=True),
    Column('title', String(255), nullable=False),
    Column('api_key', String(255), nullable=False),
)

cards = Table(
    'cards', metadata,
    Column('id', Integer, primary_key=True),
    Column('title', String(255), nullable=False),
    Column('description', Text),
    Column('price', DECIMAL(10, 2)),
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
Session = sessionmaker(bind=engine)
session = Session()


def connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        with engine.connect() as conn:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def get_all_cards():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫"""
    try:
        with engine.connect() as conn:
            result = conn.execute(cards.select())
            return result.fetchall()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫: {e}")
        return []


def insert_card(title, description, price):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏"""
    try:
        with engine.connect() as conn:
            stmt = cards.insert().values(
                title=title,
                description=description,
                price=price
            )
            result = conn.execute(stmt)
            conn.commit()
            print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID: {result.inserted_primary_key[0]}")
            return result.inserted_primary_key[0]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: {e}")
        return None


def get_api_keys():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö API –∫–ª—é—á–µ–π"""
    try:
        with engine.connect() as conn:
            result = conn.execute(api_keys.select())
            return result.fetchall()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API –∫–ª—é—á–µ–π: {e}")
        return []


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connection()

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    print("\nüìã –í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏:")
    all_cards = get_all_cards()
    for card in all_cards:
        print(card)

    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏
    print("\nüîë API –∫–ª—é—á–∏:")
    api_keys_list = get_api_keys()
    for key in api_keys_list:
        print(key)

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
    new_card_id = insert_card(
        title="–ù–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–∑ Python",
        description="–°–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ SQLAlchemy",
        price=1999.99
    )
